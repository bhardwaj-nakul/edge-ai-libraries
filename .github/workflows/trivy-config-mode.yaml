name: "[SCANS] Trivy Dockerfile Config Scan"
run-name: "[SCANS] Trivy Dockerfile Config Scan (by @${{ github.actor }} via ${{ github.event_name }})"
on:
  workflow_dispatch:
    inputs:
      dockerfile-path:
        description: 'Path to the Dockerfile to scan'
        required: true
        type: string
      trivy-report-format:
        description: 'Trivy report format (e.g. json, table, sarif)'
        required: false
        default: 'json'
        type: string
      severity-levels:
        description: 'Severity levels to check (comma-separated, e.g. LOW,MEDIUM,HIGH,CRITICAL)'
        required: false
        default: 'HIGH,CRITICAL'
        type: string
      output-report-path:
        description: 'Path to save the Trivy output report (e.g. reports/trivy.json)'
        required: true
        type: string
      name:
        description: 'Additional part of scan name'
        required: false
        type: string
        default: '1'
  workflow_call:
    inputs:
      dockerfile-path:
        description: 'Path to the Dockerfile to scan'
        required: true
        type: string
      trivy-report-format:
        description: 'Trivy report format (e.g. json, table, sarif)'
        required: false
        default: 'json'
        type: string
      severity-levels:
        description: 'Severity levels to check (comma-separated, e.g. LOW,MEDIUM,HIGH,CRITICAL)'
        required: false
        default: 'HIGH,CRITICAL'
        type: string
      output-report-path:
        description: 'Path to save the Trivy output report (e.g. reports/trivy.json)'
        required: true
        type: string
      name:
        description: 'Additional part of scan name'
        required: false
        type: string
        default: '1'
permissions: {}

jobs:
  trivy-config-scan:
    name: Trivy Dockerfile Config Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out edge-ai-libraries repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2
        with:
          persist-credentials: false

      - name: Install Trivy from Aqua Security APT repo
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg lsb-release wget apt-transport-https curl jq
          curl -fsSL https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy.gpg
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | \
          sudo tee /etc/apt/sources.list.d/trivy.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Create report directory if needed
        env:
          output-report-path: ${{ inputs.output-report-path }}
        run: |
          mkdir -p "$(dirname "${output-report-path}")"

      - name: Run Trivy config scan and save output
        env:
          dockerfile-path: ${{ inputs.dockerfile-path }}
          output-report-path: ${{ inputs.output-report-path }}
          severity-levels: ${{ inputs.severity-levels }}
          report-format: "${{ inputs.trivy-report-format }}"
        run: |
          echo "🔍 Scanning: ${dockerfile-path}"
          echo "📁 Saving report to: ${output-report-path}"
          trivy config \
            --severity "${severity-levels}" \
            --format "${report-format}" \
            --output "${output-report-path}" \
            "${dockerfile-path}"

          echo "📄 Report preview:"
          head -n 100 "${output-report-path}"

      - name: Check Trivy scan failures
        env:
          output-report-path: ${{ inputs.output-report-path }}
        run: |
          FAILURE_COUNT=$(jq '.Results[].MisconfSummary.Failures' "${output-report-path}")
          echo "Failures found: $FAILURE_COUNT"

          if [ "$FAILURE_COUNT" -gt 0 ]; then
            echo "❌ Found $FAILURE_COUNT failures! Failing the job."
            exit 1
          else
            echo "✅ No failures found. Passing."
          fi

      - name: Upload Trivy report as artifact
        env:
          output-report-path: ${{ inputs.output-report-path }}
          name: ${{ inputs.name }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 #4.6.2
        with:
          name: trivy-config-report-${name}
          path: ${output-report-path}

      - name: Clean up
        env:
          output-report-path: ${{ inputs.output-report-path }}
        run: rm -rf "${output-report-path}"
